<!DOCTYPE html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://sing-box-node.github.io/news/article-57810.htm" />
    <meta charset="utf-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <title>【java】兴唐第二十一节（LinkedList和泛型）</title>
        <meta name="description" content="LinkedList知识点 1、实现了Iterable接口的类具有迭代功能。 2、List接口为Collection的子类，表示线形数据列表，其实现类有：ArrayList(数组线性表)与Linked" />
        <link rel="icon" href="/assets/website/img/sing_box_node/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Singbox Node机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://sing-box-node.github.io/news/article-57810.htm" />
    <meta property="og:site_name" content="Singbox Node机场订阅官网" />
    <meta property="og:title" content="【java】兴唐第二十一节（LinkedList和泛型）" />
    <meta property="og:image" content="https://sing-box-node.github.io/uploads/20240825-1/3632c734aaea8d83684bbb1178b44c3b.webp" />
        <meta property="og:release_date" content="2025-02-16T07:22:53" />
    <meta property="og:updated_time" content="2025-02-16T07:22:53" />
        <meta property="og:description" content="LinkedList知识点 1、实现了Iterable接口的类具有迭代功能。 2、List接口为Collection的子类，表示线形数据列表，其实现类有：ArrayList(数组线性表)与Linked" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="【java】兴唐第二十一节（LinkedList和泛型）">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Web Font -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&display=swap" rel="stylesheet">
    <!-- ========================= CSS here ========================= -->
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/bootstrap.min.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/LineIcons.2.0.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/animate.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/tiny-slider.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/glightbox.min.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/main.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-51ZXJ2Q5DQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-51ZXJ2Q5DQ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    
</head>

<body data-page="detail">
        <div class="preloader">
        <div class="preloader-inner">
            <div class="preloader-icon">
                <span></span>
                <span></span>
            </div>
        </div>
    </div>
    <!-- /End Preloader -->
    <!-- Start Header Area -->
    <header class="header navbar-area">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-12">
                    <div class="nav-inner">
                        <!-- Start Navbar -->
                        <nav class="navbar navbar-expand-lg">
                            <a class="navbar-brand" href="/">
                                                        <span>Singbox Node</span>
                                                        </a>
                            <button class="navbar-toggler mobile-menu-btn" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                            </button>
                            <div class="collapse navbar-collapse sub-menu-bar" id="navbarSupportedContent">
                                <ul id="nav" class="navbar-nav ms-auto">
                                                                        <li class="nav-item">
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/client.htm">客户端</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                    </ul>
                            </div> <!-- navbar collapse -->
                        </nav>
                        <!-- End Navbar -->
                    </div>
                </div>
            </div> <!-- row -->
        </div> <!-- container -->
    </header>
    <!-- End Header Area -->
    <!-- Start Breadcrumbs -->
    <div class="breadcrumbs overlay">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-8 offset-lg-2 col-md-12 col-12">
                    <div class="breadcrumbs-content">
                        <h1 class="page-title">【java】兴唐第二十一节（LinkedList和泛型）</h1>
                    </div>
                    <ul class="breadcrumb-nav">
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumbs -->
    <!-- Start Departments  Area -->
    <section class="departments section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p><font size="3" color="black"></font><br /><font size="5" color="black">LinkedList知识点</font><br /> 1、实现了Iterable接口的类具有迭代功能。<br /> 2、List接口为Collection的子类，表示线形数据列表，其实现类有：ArrayList(数组线性表)与LinkedList(链表)<br /><font size="3" color="green">算了不多说了，上图吧</font><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230108/2326f80e034cf968a654fb4d9436a19c.jpg" alt="【java】兴唐第二十一节（LinkedList和泛型）"></p> <p>3、ArrayList是一个可变数组（当存储数据长度大于当前数组长度时，会重新声明一个数组，将原来的数据拷贝过来。）</p> <p>4、LinkedList的第一个元素的Pre值一定为nell ,可以用来判断是不是第一个元素</p> <p>5、ArrayList元素地址是连续的，LinkedList的地址不连续。</p> <p>6、ArrayList是数组的线性的数据结构，使用连续的内存单元存储数据元素，对元素的遍历速度比较快LinkedList在遍历集合元素方面比较慢，因为需要寻找下一个元素的地址。<br /> LinkedList是双向链表数据结构，前一个元素储存了后一个元素的地址，后一个元素记录了前一个元素的地址。当添加过删除元素时比较快。因为ArrayList需要移动删除或添加元素后的所有元素。</p> <p><font size="3" color="green">7、留下的疑问：什么是线程安全？等到讲完多线程后再来做补充，使用多线程的目的是为了使程序跑的更快一点</font></p> <p>7、Linkedlist删除元素时直接将要删除元素的前一个元素的next指向要删除元素后一个元的pre即可。</p> <p>8、向指定位置添加元素<br /> 代码实现</p> <pre><code class="prism language-java">stus<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"孙悟空"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>9、迭代器的使用<br /> （1）如果只是打印的话则不需要将数据转为字符串的形式<br /> 代码实现：</p> <pre><code class="prism language-java">Iterator iter <span class="token operator">=</span> stus<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token keyword">while</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 			System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"====&gt;"</span> <span class="token operator">+</span> iter<span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token punctuation">}</span> </code></pre> <p>(2)如果想对数据进行处理，则需要将数据转化为String类型，有两种方法<br /> 方法一：<br /> 代码实现：</p> <pre><code class="prism language-java">Iterator iter <span class="token operator">=</span> stus<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token keyword">while</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 			String n <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=====&gt;"</span> <span class="token operator">+</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>	 		<span class="token punctuation">}</span> </code></pre> <p>方法二：<br /> 代码实现：</p> <pre><code class="prism language-java">Iterator iter <span class="token operator">=</span> stus<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token keyword">while</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 			String n <span class="token operator">=</span> iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span> 			System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"====&gt;"</span> <span class="token operator">+</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token punctuation">}</span> </code></pre> <p><font size="3" color="red">注：任何的对象和字符串拼接都会变成字符串</font></p> <p>10、LinkedList新增的方法<br /> LinkedList除了实现List提供的抽象方法外，还增加了一些方法：</p> <ol> <li>void addFirst(Object o) 将指定数据元素插入此集合的开头,原来元素（如果有）后移；</li> <li>void addLast(Object o) 将指定数据元素插入此集合的结尾</li> <li>Object getFirst() 返回此集合的第一个数据元素</li> <li>Object getLast() 返回此集合的最后一个数据元素</li> <li>Object removeFirst() 移除并返回集合表的第一个数据元素</li> <li>Object removeLast() 移除并返回集合表的最后一个数据元素<br /><font size="3" color="red">新增的六个方法都要记住</font> </li> </ol> <p><font size="5" color="black">泛型</font><br /> 1、实例化对象时的用法<br /> 代码实现：</p> <pre><code class="prism language-java">List<span class="token generics function"><span class="token punctuation">&lt;</span>Student<span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics function"><span class="token punctuation">&lt;</span>Student<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	 </code></pre> <p>2、引用类型<br /> 例：</p> <pre><code class="prism language-java">list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stu<span class="token punctuation">)</span><span class="token punctuation">;</span> stu<span class="token punctuation">.</span><span class="token function">setStuNo</span><span class="token punctuation">(</span><span class="token string">"2019"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stu<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <p>由于add的两个stu地址相同，所以打印时输出的内容是一样的。</p> <p><font size="5" color="black">LinkedList的源码分析</font></p> <p>1、</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayList</span><span class="token generics function"><span class="token punctuation">&lt;</span>E<span class="token punctuation">&gt;</span></span>  </code></pre> <p>E指的是元素，表示ArrayList盛放元素的类型</p> <p>2、最后一个元素如果为null则说明该集合是空的。</p> <p><font size="3" color="green">小作业：将LinkFirst和LinkList自己写一下</font></p> <p><font size="5" color="black">ArrayList的源码分析</font><br /><font size="3" color="black"></font><br /> 1、其中有一个有参的构造方法</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token function">ArrayList</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> </code></pre> <p>很重要！因为它可以在实例化ArrayList时指定默认的长度。（无参的构造方法初始化一个长度为10的数组（默认值为10）数组）<br /> 避免一些不必要的空间扩容和元素复制。</p> <pre><code class="prism language-java"><span class="token keyword">public</span> <span class="token function">ArrayList</span><span class="token punctuation">(</span>Collection<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token operator">&gt;</span> c<span class="token punctuation">)</span> </code></pre> <p>2、以上代码 中？部分表示的是表示的输入的类型必须为ArrrayList的类或其子类，作用是将集合中的元素添加到新new的ArrayList当中。<br /><font size="3" color="green">3、疑问：这一步干什么用的？</font><br /> if (elementData.getClass() != Object[].class)</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-57239.htm">猫瘟疫苗多大可以打（猫瘟疫苗管多久）</a></p>
                                        <p>下一个：<a href="/news/article-57811.htm">动物医院的发展方向和趋势是什么（动物医院发展前景）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-32514.htm" title="成都宠物领养平台正规吗现在（成都宠物领养网免费）">成都宠物领养平台正规吗现在（成都宠物领养网免费）</a></li>
                        <li class="py-2"><a href="/news/article-40750.htm" title="宠物领养网免费同城多少钱一只 宠物领养网免费同城多少钱一只猫">宠物领养网免费同城多少钱一只 宠物领养网免费同城多少钱一只猫</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-13-free-high-speed-nodes.htm" title="「1月13日」最高速度22.4M/S，2025年Singbox Node每天更新免费机场订阅节点链接">「1月13日」最高速度22.4M/S，2025年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-42242.htm" title="AgileConfig 1.6.0 发布 &#8211; 支持服务注册与发现">AgileConfig 1.6.0 发布 &#8211; 支持服务注册与发现</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-8-free-node-subscribe-links.htm" title="「11月8日」最高速度21.6M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「11月8日」最高速度21.6M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-41247.htm" title="异步复位同步释放在实际项目中的应用">异步复位同步释放在实际项目中的应用</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-19-free-high-speed-nodes.htm" title="「11月19日」最高速度20.4M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「11月19日」最高速度20.4M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-45209.htm" title="合肥哪里能领养宠物 合肥哪里能领养宠物狗">合肥哪里能领养宠物 合肥哪里能领养宠物狗</a></li>
                        <li class="py-2"><a href="/news/article-43228.htm" title="国产宠物粮品牌排行榜最新排名（国产宠物粮品牌排行榜最新排名图片）">国产宠物粮品牌排行榜最新排名（国产宠物粮品牌排行榜最新排名图片）</a></li>
                        <li class="py-2"><a href="/news/article-35097.htm" title="@Valid 参数校验不生效问题解决">@Valid 参数校验不生效问题解决</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- /End Departments  Area -->
        <!-- Start Footer Area -->
    <footer class="footer overlay">
        <!-- Start Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="inner">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-12">
                            <div class="content">
                                <p class="copyright-text">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                                Singbox Node机场订阅官网 版权所有
                                <br />
                                Powered by WordPress
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Middle -->
    </footer>
    <!--/ End Footer Area -->
    <!-- ========================= scroll-top ========================= -->
    <a href="#" class="scroll-top">
        <i class="lni lni-chevron-up"></i>
    </a>
    <!-- ========================= JS here ========================= -->
    <script src="/assets/website/js/frontend/sing_box_node/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/wow.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/tiny-slider.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/count-up.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/imagesloaded.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/isotope.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/main.js"></script>
    <script type="text/javascript">
    //======== Hero Slider
    var slider = new tns({
        container: '.hero-slider',
        slideBy: 'page',
        autoplay: true,
        autoplayButtonOutput: false,
        mouseDrag: true,
        gutter: 0,
        items: 1,
        nav: false,
        controls: true,
        controlsText: [
            '<i class="lni lni-chevron-left"></i>',
            '<i class="lni lni-chevron-right"></i>'
        ],
        responsive: {
            1200: {
                items: 1,
            },
            992: {
                items: 1,
            },
            0: {
                items: 1,
            }

        }
    });
    //========= testimonial 
    tns({
        container: '.testimonial-slider',
        items: 3,
        slideBy: 'page',
        autoplay: false,
        mouseDrag: true,
        gutter: 0,
        nav: true,
        controls: false,
        controlsText: ['<i class="lni lni-arrow-left"></i>', '<i class="lni lni-arrow-right"></i>'],
        responsive: {
            0: {
                items: 1,
            },
            540: {
                items: 1,
            },
            768: {
                items: 2,
            },
            992: {
                items: 2,
            },
            1170: {
                items: 3,
            }
        }
    });

    //====== counter up 
    var cu = new counterUp({
        start: 0,
        duration: 2000,
        intvalues: true,
        interval: 100,
        append: " ",
    });
    cu.start();
    //========= glightbox
    GLightbox({
        'href': '#',
        'type': 'video',
        'source': 'youtube', //vimeo, youtube or local
        'width': 900,
        'autoplayVideos': true,
    });
    //============== isotope masonry js with imagesloaded
    imagesLoaded('#container', function() {
        var elem = document.querySelector('.grid');
        var iso = new Isotope(elem, {
            // options
            itemSelector: '.grid-item',
            masonry: {
                // use outer width of grid-sizer for columnWidth
                columnWidth: '.grid-item'
            }
        });

        let filterButtons = document.querySelectorAll('.portfolio-btn-wrapper button');
        filterButtons.forEach(e =>
            e.addEventListener('click', () => {

                let filterValue = event.target.getAttribute('data-filter');
                iso.arrange({
                    filter: filterValue
                });
            })
        );
    });
    </script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>