<!DOCTYPE html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://sing-box-node.github.io/news/article-64884.htm" />
    <meta charset="utf-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <title>vite + vue3 + element-plus + axios + vueRouter + vuex + scss 搭建项目</title>
        <meta name="description" content="准备工作 1.先搭建一个vue工程，这里有两种办法，一种是使用vue-cli ,另一种是使用vite(一种新的构建工具)，具体搭建传送门 2.搭建好项目后，我们就可以安装对应的库了，这里需要安装以下的" />
        <link rel="icon" href="/assets/website/img/sing_box_node/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Singbox Node机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://sing-box-node.github.io/news/article-64884.htm" />
    <meta property="og:site_name" content="Singbox Node机场订阅官网" />
    <meta property="og:title" content="vite + vue3 + element-plus + axios + vueRouter + vuex + scss 搭建项目" />
    <meta property="og:image" content="https://sing-box-node.github.io/uploads/20240825-1/368caffbf1616e5828ab6c4f9c7249bd.webp" />
        <meta property="og:release_date" content="2025-02-28T06:57:28" />
    <meta property="og:updated_time" content="2025-02-28T06:57:28" />
        <meta property="og:description" content="准备工作 1.先搭建一个vue工程，这里有两种办法，一种是使用vue-cli ,另一种是使用vite(一种新的构建工具)，具体搭建传送门 2.搭建好项目后，我们就可以安装对应的库了，这里需要安装以下的" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="vite + vue3 + element-plus + axios + vueRouter + vuex + scss 搭建项目">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Web Font -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&display=swap" rel="stylesheet">
    <!-- ========================= CSS here ========================= -->
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/bootstrap.min.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/LineIcons.2.0.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/animate.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/tiny-slider.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/glightbox.min.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/main.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-51ZXJ2Q5DQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-51ZXJ2Q5DQ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    
</head>

<body data-page="detail">
        <div class="preloader">
        <div class="preloader-inner">
            <div class="preloader-icon">
                <span></span>
                <span></span>
            </div>
        </div>
    </div>
    <!-- /End Preloader -->
    <!-- Start Header Area -->
    <header class="header navbar-area">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-12">
                    <div class="nav-inner">
                        <!-- Start Navbar -->
                        <nav class="navbar navbar-expand-lg">
                            <a class="navbar-brand" href="/">
                                                        <span>Singbox Node</span>
                                                        </a>
                            <button class="navbar-toggler mobile-menu-btn" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                            </button>
                            <div class="collapse navbar-collapse sub-menu-bar" id="navbarSupportedContent">
                                <ul id="nav" class="navbar-nav ms-auto">
                                                                        <li class="nav-item">
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/client.htm">客户端</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                    </ul>
                            </div> <!-- navbar collapse -->
                        </nav>
                        <!-- End Navbar -->
                    </div>
                </div>
            </div> <!-- row -->
        </div> <!-- container -->
    </header>
    <!-- End Header Area -->
    <!-- Start Breadcrumbs -->
    <div class="breadcrumbs overlay">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-8 offset-lg-2 col-md-12 col-12">
                    <div class="breadcrumbs-content">
                        <h1 class="page-title">vite + vue3 + element-plus + axios + vueRouter + vuex + scss 搭建项目</h1>
                    </div>
                    <ul class="breadcrumb-nav">
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumbs -->
    <!-- Start Departments  Area -->
    <section class="departments section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> </h1> <h2><a id="_1" rel="nofollow"></a>准备工作</h2> <p>1.先搭建一个vue工程，这里有两种办法，一种是使用vue-cli ,另一种是使用vite(一种新的构建工具)，具体搭建<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/qq_41499782/article/details/109092640"  rel="nofollow">传送门</a><br /> 2.搭建好项目后，我们就可以安装对应的库了，这里需要安装以下的这些库：</p> <ul> <li>npm install --save<code>axios</code> 这个库不需要说使用next版本，vue升级和发起http请求没有直接的关系，所以axios不用说要不要升级安装<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://www.axios-js.com/"  rel="nofollow">axios官网</a></li> <li>npm install<code>element-plus</code> --save 这个库是element 团队针对vue3而专门开发的库，对于vue3的库，除了elment-plus外，还有ant-design 等<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://element-plus.org/#/zh-CN/component/installation"  rel="nofollow">element-plus 官网</a></li> <li>npm install<code>vue-router@4</code> 这个是vue router 专门的库,现在还是带测试的版本，但是如果需要在vue3中使用路由，那么需要使用这个库，<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://next.router.vuejs.org/installation.html"  rel="nofollow">官网</a></li> <li>npm install<code>sass</code> -D 这个是sass 的库，这里为啥不需要安装<code>sass--loader</code> 或者<code>style-loader</code> 或者 node-sass 呢？ 这个在设计的时候，vue3 的缔造者 在设计vue 的时候已经考虑过这件事情，vite 这个构建工具里面集成了scss, less ,stylus 等， 原话如下<code>That said, Vite does provide built-in support for .scss, .sass, .less, .styl and .stylus files. There is no need to install Vite-specific plugins for them, but the corresponding pre-processor itself must be installed as a peer dependency:</code><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://vitejs.dev/guide/features.html#css-modules"  rel="nofollow">vite 的官网</a></li> <li>npm install<code>vuex@next</code> --save 这个是vuex的库，如果需要使用则需要安装这个库，<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://next.vuex.vuejs.org/installation.html#direct-download-cdn"  rel="nofollow">vuex官网</a></li> </ul> <p>最后我的package.json 的情况如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220606/0c31bae28d3b035be78c0f7af03bb154.jpg" alt="vite + vue3 + element-plus + axios + vueRouter + vuex + scss 搭建项目"></p> <h2><a id="_14" rel="nofollow"></a>项目编写</h2> <p>在项目编写阶段，由于本人现在也是在体验vue3的阶段，下面可能也会有理解错误的地方，还请大家多多指教</p> <h3><a id="vue_17" rel="nofollow"></a>配置vue的环境</h3> <blockquote> <p>直接在根目录建立vite.config.js，里面的常用配置如下：</p> </blockquote> <pre><code class="prism language-javascript"><span class="token keyword">const</span> path<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span><span class="token comment">// 代理，最重要，其他的都可以有默认配置</span>         proxy<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token string">'/api'</span><span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span>                 target<span class="token punctuation">:</span><span class="token string">'http://localhost:9011'</span><span class="token punctuation">,</span>                 changeOrigin<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// 入口</span>         entry<span class="token punctuation">:</span><span class="token string">'index.html'</span><span class="token punctuation">,</span><span class="token comment">// 出口</span>         outDir<span class="token punctuation">:</span><span class="token string">'./../public/html'</span><span class="token punctuation">,</span><span class="token comment">// 打包后的跟路径</span>         base<span class="token punctuation">:</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token comment">// 输出的静态资源的文件夹名称</span>         assetsDir<span class="token punctuation">:</span><span class="token string">'assets'</span><span class="token punctuation">,</span><span class="token comment">// 是否开启ssr服务断渲染</span>         ssr<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">// 重命名路径  path.resolve(__dirname, './src')</span>         alias<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token string">'/@/'</span><span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">'./src'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// 端口</span>         port<span class="token punctuation">:</span><span class="token number">3002</span><span class="token punctuation">,</span><span class="token comment">// 是否自动开启浏览器</span>         open<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">// 开启控制台输出日志</span>         silent<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">// 那个包不需要打包</span>          optimizeDeps<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span>             exclude<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'element-plus'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// css预设的配置</span>         cssPreprocessOptions<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span>             scss<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span>                 additionalData<span class="token punctuation">:</span><span class="token string">'@import "style/var.scss";'</span><span class="token punctuation">,</span><span class="token comment">// 添加公共样式</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/qq_41499782/article/details/111660366"  rel="nofollow">详细配置</a></p> <h3><a id="mainjs_67" rel="nofollow"></a>起步的main.js</h3> <blockquote> <p>创建一个vue的实例，导入element-plus, 导入vue-router,<br /> 或者vuex，但是这里都需要通过createApp链式调用来使用插件</p> </blockquote> <pre><code class="prism language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>createApp<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue'</span><span class="token keyword">import</span> App<span class="token keyword">from</span><span class="token string">'./App.vue'</span><span class="token keyword">import</span> ElementPlus<span class="token keyword">from</span><span class="token string">'element-plus'</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token string">'../style/index.scss'</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token string">'element-plus/lib/theme-chalk/index.css'</span><span class="token punctuation">;</span><span class="token keyword">import</span> router<span class="token keyword">from</span><span class="token string">"./router"</span><span class="token punctuation">;</span><span class="token keyword">import</span> vuex<span class="token keyword">from</span><span class="token string">"./vuex"</span><span class="token punctuation">;</span><span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementPlus<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>vuex<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span></code></pre> <h3><a id="_82" rel="nofollow"></a>创建路由</h3> <blockquote> <p>在src文件夹下面创建router文件夹，里面配置vue的路由</p> </blockquote> <pre><code class="prism language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>createRouter<span class="token punctuation">,</span> createWebHistory<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vue-router'</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>routes<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">"./routes"</span><span class="token punctuation">;</span><span class="token keyword">const</span> router<span class="token operator">=</span><span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>     history<span class="token punctuation">:</span><span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// 路由的history模式</span>     routes<span class="token punctuation">,</span><span class="token comment">// 导入路由的配置， 和vue2里面的路由一样</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">export</span><span class="token keyword">default</span> router<span class="token punctuation">;</span><span class="token comment">//注意： 在.vue组件中如果需要使用router,则需要导入useRouter这个方法，需要使用route,则需要导入，useRoute这个方法</span></code></pre> <h3><a id="_100" rel="nofollow"></a>是否需要状态管理工具</h3> <blockquote> <p>如果需要使用状态管理工具，那个在src下面创建一个store文件夹，然后里面写vuex的配置，我这里使用的是模块，模块里面的内容和vuex3是一样的，调用方式也是一样的</p> </blockquote> <pre><code class="prism language-javascript"><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>createStore<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">'vuex'</span><span class="token keyword">import</span> userModule<span class="token keyword">from</span><span class="token string">"./userModule"</span><span class="token punctuation">;</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>     modules<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span>         userModule<span class="token punctuation">:</span> userModule<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">//模块例子</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span>     namespaced<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>     state<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span>         isLoading<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>         data<span class="token punctuation">:</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     mutations<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token comment">// 设置是否正在加载</span><span class="token function">setIsLoading</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             state<span class="token punctuation">.</span>isLoading<span class="token operator">=</span> payload<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// 设置用户数据</span><span class="token function">setData</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             state<span class="token punctuation">.</span>data<span class="token operator">=</span> payload<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>     actions<span class="token punctuation">:</span><span class="token punctuation">{<!-- --></span><span class="token comment">// 登录</span><span class="token keyword">async</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>commit<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{<!-- --></span>loginId<span class="token punctuation">,</span> loginPwd<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'setIsLoading'</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> r<span class="token operator">=</span><span class="token keyword">await</span><span class="token function">login</span><span class="token punctuation">(</span>loginId<span class="token punctuation">,</span> loginPwd<span class="token punctuation">)</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'setData'</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'setIsLoading'</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> r<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// 注意： 如果在.vue组件中需要使用store,需要导入 userStore的这个方法</span><span class="token comment">// 例如：在vue的setup函数中使用</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>useStore<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">"vuex"</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>computed<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span><span class="token punctuation">{<!-- --></span>useRouter<span class="token punctuation">}</span><span class="token keyword">from</span><span class="token string">"vue-router"</span><span class="token punctuation">;</span><span class="token keyword">export</span><span class="token keyword">default</span><span class="token punctuation">{<!-- --></span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">const</span> store<span class="token operator">=</span><span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> router<span class="token operator">=</span><span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span><span class="token function-variable function">loginOut</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{<!-- --></span>       store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'userModule/loginOut'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token punctuation">{<!-- --></span>       isLoading<span class="token punctuation">:</span><span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>userModule<span class="token punctuation">.</span>isLoading<span class="token punctuation">)</span><span class="token punctuation">,</span>       data<span class="token punctuation">:</span><span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>userModule<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>       loginOut<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <h3><a id="_166" rel="nofollow"></a>直接撸代码</h3> <p>对于撸代码的话，和vue2里面的差不多，只是vue3里面增加了compositionAPI 里面有比较大的改动，在写代码的时候，难免会有磕磕碰碰，祝愿大家在写代码的时候，写的都对。</p> <p>这篇文章是基于本人想实现一个图片的网站，后台使用node,前台使用vue3，作为自己的练手项目，毕竟公司里面现在使用vue3对自己也哪方面都不好。 有兴趣的可以看看<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/cll123456/deal-img.git"  rel="nofollow">项目地址</a><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://img.chenliangliang.top/"  rel="nofollow">演示地址</a></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-64275.htm">Pytorch：使用data_prefetcher提升数据读取速度【自动将训练数据移动到GPU】</a></p>
                                        <p>下一个：<a href="/news/article-64885.htm">Java 语言实现简易版扫码登录_在线工具</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-13-node-share.htm" title="「12月13日」最高速度18.1M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「12月13日」最高速度18.1M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-24-node-share-links.htm" title="「12月24日」最高速度19M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「12月24日」最高速度19M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-36129.htm" title="哪里可以给动物打狂犬（动物到哪里打狂犬疫苗）">哪里可以给动物打狂犬（动物到哪里打狂犬疫苗）</a></li>
                        <li class="py-2"><a href="/news/article-56112.htm" title="领养宠物还要押金嘛（领养宠物要钱么）">领养宠物还要押金嘛（领养宠物要钱么）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-6-node-share-links.htm" title="「11月6日」最高速度21M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「11月6日」最高速度21M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-42729.htm" title="Jpa框架下拼接原生sql 并执行">Jpa框架下拼接原生sql 并执行</a></li>
                        <li class="py-2"><a href="/news/article-55556.htm" title="Zookeeper采用Java客户端API">Zookeeper采用Java客户端API</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-10-free-node-subscribe-links.htm" title="「12月10日」最高速度18.7M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「12月10日」最高速度18.7M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-63061.htm" title="动物医疗机构的主管部门（动物医疗机构的主管部门是哪里）">动物医疗机构的主管部门（动物医疗机构的主管部门是哪里）</a></li>
                        <li class="py-2"><a href="/news/article-19017.htm" title="高端猫粮品牌（最高端猫粮）">高端猫粮品牌（最高端猫粮）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- /End Departments  Area -->
        <!-- Start Footer Area -->
    <footer class="footer overlay">
        <!-- Start Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="inner">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-12">
                            <div class="content">
                                <p class="copyright-text">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                                Singbox Node机场订阅官网 版权所有
                                <br />
                                Powered by WordPress
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Middle -->
    </footer>
    <!--/ End Footer Area -->
    <!-- ========================= scroll-top ========================= -->
    <a href="#" class="scroll-top">
        <i class="lni lni-chevron-up"></i>
    </a>
    <!-- ========================= JS here ========================= -->
    <script src="/assets/website/js/frontend/sing_box_node/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/wow.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/tiny-slider.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/count-up.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/imagesloaded.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/isotope.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/main.js"></script>
    <script type="text/javascript">
    //======== Hero Slider
    var slider = new tns({
        container: '.hero-slider',
        slideBy: 'page',
        autoplay: true,
        autoplayButtonOutput: false,
        mouseDrag: true,
        gutter: 0,
        items: 1,
        nav: false,
        controls: true,
        controlsText: [
            '<i class="lni lni-chevron-left"></i>',
            '<i class="lni lni-chevron-right"></i>'
        ],
        responsive: {
            1200: {
                items: 1,
            },
            992: {
                items: 1,
            },
            0: {
                items: 1,
            }

        }
    });
    //========= testimonial 
    tns({
        container: '.testimonial-slider',
        items: 3,
        slideBy: 'page',
        autoplay: false,
        mouseDrag: true,
        gutter: 0,
        nav: true,
        controls: false,
        controlsText: ['<i class="lni lni-arrow-left"></i>', '<i class="lni lni-arrow-right"></i>'],
        responsive: {
            0: {
                items: 1,
            },
            540: {
                items: 1,
            },
            768: {
                items: 2,
            },
            992: {
                items: 2,
            },
            1170: {
                items: 3,
            }
        }
    });

    //====== counter up 
    var cu = new counterUp({
        start: 0,
        duration: 2000,
        intvalues: true,
        interval: 100,
        append: " ",
    });
    cu.start();
    //========= glightbox
    GLightbox({
        'href': '#',
        'type': 'video',
        'source': 'youtube', //vimeo, youtube or local
        'width': 900,
        'autoplayVideos': true,
    });
    //============== isotope masonry js with imagesloaded
    imagesLoaded('#container', function() {
        var elem = document.querySelector('.grid');
        var iso = new Isotope(elem, {
            // options
            itemSelector: '.grid-item',
            masonry: {
                // use outer width of grid-sizer for columnWidth
                columnWidth: '.grid-item'
            }
        });

        let filterButtons = document.querySelectorAll('.portfolio-btn-wrapper button');
        filterButtons.forEach(e =>
            e.addEventListener('click', () => {

                let filterValue = event.target.getAttribute('data-filter');
                iso.arrange({
                    filter: filterValue
                });
            })
        );
    });
    </script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>