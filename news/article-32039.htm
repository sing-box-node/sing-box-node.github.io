<!DOCTYPE html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://sing-box-node.github.io/news/article-32039.htm" />
    <meta charset="utf-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <title>在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？</title>
        <meta name="description" content="定义function类型  fn() {     console.log(this)   }  使用function类型   render() {     return (       &lt;div" />
        <link rel="icon" href="/assets/website/img/sing_box_node/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Web Font -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&display=swap" rel="stylesheet">
    <!-- ========================= CSS here ========================= -->
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/bootstrap.min.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/LineIcons.2.0.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/animate.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/tiny-slider.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/glightbox.min.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/main.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-51ZXJ2Q5DQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-51ZXJ2Q5DQ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    
</head>

<body data-page="detail">
        <div class="preloader">
        <div class="preloader-inner">
            <div class="preloader-icon">
                <span></span>
                <span></span>
            </div>
        </div>
    </div>
    <!-- /End Preloader -->
    <!-- Start Header Area -->
    <header class="header navbar-area">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-12">
                    <div class="nav-inner">
                        <!-- Start Navbar -->
                        <nav class="navbar navbar-expand-lg">
                                                        <a class="navbar-brand" href="/">
                                <span>Singbox Node</span>
                            </a>
                                                        <button class="navbar-toggler mobile-menu-btn" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                            </button>
                            <div class="collapse navbar-collapse sub-menu-bar" id="navbarSupportedContent">
                                <ul id="nav" class="navbar-nav ms-auto">
                                                                        <li class="nav-item">
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="#">关于</a>
                                    </li>
                                    <li class="nav-item">
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </div> <!-- navbar collapse -->
                        </nav>
                        <!-- End Navbar -->
                    </div>
                </div>
            </div> <!-- row -->
        </div> <!-- container -->
    </header>
    <!-- End Header Area -->
    <!-- Start Breadcrumbs -->
    <div class="breadcrumbs overlay">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-8 offset-lg-2 col-md-12 col-12">
                    <div class="breadcrumbs-content">
                        <h1 class="page-title">在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？</h1>
                    </div>
                    <ul class="breadcrumb-nav">
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumbs -->
    <!-- Start Departments  Area -->
    <section class="departments section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> </h1> <p>定义<code>function</code>类型</p> <pre><code class="prism language-javascript"> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>   <span class="token punctuation">}</span> </code></pre> <p>使用<code>function</code>类型</p> <pre><code class="prism language-javascript">  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">return</span> <span class="token punctuation">(</span>       <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span>fn<span class="token punctuation">}</span><span class="token operator">&gt;</span>请点击<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span>       <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span> </code></pre> <h4> <a id="_19" rel="nofollow"></a>会引发什么样子的问题呢？</h4> <p><code>this</code>指向的问题<br /> 接下来当页面加载完毕的时候我打印一次<code>this</code>和点击以后的<code>this</code>做一次对比</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/9765949a450d79146d32c1d60f2c712f.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><br /><strong>页面初始化完毕以后this的参数</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/8645c59f6b68a5eeb5d15a78f1129fa7.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"></p> <p><strong>fn函数内部的this</strong>(这里的this指向的就是函数自己)<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/77e5a8720058706703c3b510ce56d078.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"></p> <h2> <a id="functionthis_32" rel="nofollow"></a>如何解决function函数的this指向的问题呢？</h2> <p><code>call</code>、<code>aplay</code> 和 <code>bind</code>这里就不一一列举了，最常用的就是bind</p> <p><strong>bind:</strong> 方法会创建一个新的函数，当被调用的时候，将其this关键字设置为提供的值，我们必须手动去调用</p> <pre><code class="prism language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token special-attr"><span class="token attr-name">onClick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token value javascript language-javascript"><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span></span></span><span class="token punctuation">&gt;</span></span>请点击<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span> </code></pre> <p>看看效果吧 !<br /> 这里的代码没有改变<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/177f61b7fab726a3f04424e5d079c8d9.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><br /><strong>使用bind以后的结果:</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/f560aba9a11c5ff89a7bd760916bc801.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"></p> <h2> <a id="_45" rel="nofollow"></a>箭头函数类型的定义和使用</h2> <p><strong>定义</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/19af4872289e673c92a44d23e8a59c3c.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><br /><strong>使用方式和function一样的区别在于箭头函数没有自己的<code>this</code>指向，只会向上继承父级的<code>this</code>指向，如果父级没有<code>this</code>指向还会继续向上检索</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/860e6df2739fa1e67d8e85e7dec85610.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/0abcf7c4e6b422ef3179c0dacaf49d38.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><br /> 执行后的效果<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/cb71c62dcea55901b943e036cf0ee4e5.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/2a7a075331b50d32912689575b88e832.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"></p> <h2> <a id="_54" rel="nofollow"></a>如何进行事件传参呢？</h2> <p>1.使用bind，call，aplay<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/a66ed175d0592975d79137591f289197.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/8fa4c8cb8945a56128a6f2dd13b8f599.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/be1efa4c0cdea07c65bf97984ce0983c.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><br /> 2.使用箭头函数的方式传参<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/646b1fb583b2fb0223683f35d4f10921.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><img decoding="async" src="http://img.555519.xyz/uploads/20221230/b43f3a4983659379002268f8ccae3be6.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"></p> <h2> <a id="event_63" rel="nofollow"></a>重点来了，如何使用事件对象event？</h2> <h4> <a id="_64" rel="nofollow"></a>不传参的情况下</h4> <p>不传参的情况下默认值就是event<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/5e634b9ad952fe206de4d5e198f102be.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><img decoding="async" src="http://img.555519.xyz/uploads/20221230/39ac59e0938cf1bab8597c2972fc31d1.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/6a78b5a2a9bfa18f1a9a3bcfe003077a.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"></p> <h4> <a id="event_70" rel="nofollow"></a>如果我需要传参还需要获取事件对象event呢？</h4> <h5> <a id="1bindcallaplay_72" rel="nofollow"></a>1.使用bind，call，aplay</h5> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/15d64ca6d4ec2fb7892dd6d90ad330ab.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"></p> <pre><code class="prism language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token special-attr"><span class="token attr-name">onClick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token value javascript language-javascript"><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span></span></span></span> <span class="token attr-name">'我是传递进去的参数')}</span><span class="token punctuation">&gt;</span></span>请点击<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">&gt;</span></span> </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/c0c02b93ddd67c113fd241d9dc910fc3.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><br /><strong>结果</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/c877b0b500b49d14be7a87f8e4fae39a.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><br /><strong>这是为什么呢？</strong><br /> 当你使用bind，call，aplay着三个函数的时候，默认他最后一位的参数就是event事件对象<br /><strong>如果我传递三个参数呢？</strong><br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/6836eac4907867df2e03479a64b0e15c.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"></p> <p>第二个参数是没有值的<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/b830f30723c4db82cf66191a1e5ee508.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><br /> 就会发现最后一个怎么没有值呢？<br /> 通过推算的出来的结果是赋值的event的公式应该是<br /><code>传递进去参数的长度 + 1 = 就是event事件对象最后所在的位置</code></p> <h5> <a id="2_93" rel="nofollow"></a>2.使用箭头函数(使用较多)</h5> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/b04e79ddbc304d71d92fc6085ef23179.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"></p> <pre><code class="prism language-javascript"> <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token string">'我是传递进去的参数'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>请点击<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span> </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/4bb2a7e70a64914aeaecf45094b68a2f.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/302fbe9f7bd49c86cf72ca41fec6786d.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"></p> <p>这里的运行机制就相当于，我先拿到事件对象赋值给原先的函数，因为函数如果不传参的情况下，默认值，就是事件对象。<br /><code>()=&gt;</code>这种写法相当于直接返回结果</p> </h1> <p>这种写法是万万不可的!!!<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/0a2ac8903798c9ea19edbcb1b6d30121.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"><br /> 像这种方法就相当于这个button按钮好了以后就加载这个函数<br /> render树刷新一次，这个事件都会执行一次，会增加计算机的负担。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20221230/09c9a5f90d64c53cc0e8b8cc4bc0e510.jpg" alt="在react中使用event(事件对象)，如何使用，注意事项和react中如何定义和使用函数？"></p> <pre><code class="prism language-javascript">    <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token string">'e'</span><span class="token punctuation">,</span> <span class="token string">'我是传递进去的参数'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>请点击<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">&gt;</span> </code></pre> <p>万万不能这样写!!!</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-31450.htm">想念动物医院电话（动物医院大众点评）</a></p>
                                        <p>下一个：<a href="/news/article-32040.htm">深圳宠物猫免费领养（深圳宠物猫免费领养地址）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-9-3-free-node-subscribe.htm" title="「9月3日」最高速度18.5M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「9月3日」最高速度18.5M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-19-free-high-speed-nodes.htm" title="「10月19日」最高速度19.2M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「10月19日」最高速度19.2M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-14-free-high-speed-nodes.htm" title="「12月14日」最高速度22.9M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「12月14日」最高速度22.9M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-13-node-share.htm" title="「12月13日」最高速度18.1M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「12月13日」最高速度18.1M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-26848.htm" title="武汉哪家宠物医院好（武汉哪家宠物医院好点）">武汉哪家宠物医院好（武汉哪家宠物医院好点）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-18-free-subscribe-node.htm" title="「9月18日」最高速度20.3M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「9月18日」最高速度20.3M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-34415.htm" title="开动物医院需要什么手续和条件（开设动物医院的条件有哪些?）">开动物医院需要什么手续和条件（开设动物医院的条件有哪些?）</a></li>
                        <li class="py-2"><a href="/news/article-30604.htm" title="猫咪三针打完多久可以出门（猫咪三针打完多久可以出门了）">猫咪三针打完多久可以出门（猫咪三针打完多久可以出门了）</a></li>
                        <li class="py-2"><a href="/news/article-21316.htm" title="动物防疫工作部署（2020年动物防疫工作计划）">动物防疫工作部署（2020年动物防疫工作计划）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-19-free-high-speed-nodes.htm" title="「11月19日」最高速度20.4M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「11月19日」最高速度20.4M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">7</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- /End Departments  Area -->
        <!-- Start Footer Area -->
    <footer class="footer overlay">
        <!-- Start Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="inner">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-12">
                            <div class="content">
                                <p class="copyright-text">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                                Singbox Node机场订阅官网 版权所有
                                <br />
                                Powered by WordPress
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Middle -->
    </footer>
    <!--/ End Footer Area -->
    <!-- ========================= scroll-top ========================= -->
    <a href="#" class="scroll-top">
        <i class="lni lni-chevron-up"></i>
    </a>
    <!-- ========================= JS here ========================= -->
    <script src="/assets/website/js/frontend/sing_box_node/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/wow.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/tiny-slider.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/count-up.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/imagesloaded.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/isotope.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/main.js"></script>
    <script type="text/javascript">
    //======== Hero Slider
    var slider = new tns({
        container: '.hero-slider',
        slideBy: 'page',
        autoplay: true,
        autoplayButtonOutput: false,
        mouseDrag: true,
        gutter: 0,
        items: 1,
        nav: false,
        controls: true,
        controlsText: [
            '<i class="lni lni-chevron-left"></i>',
            '<i class="lni lni-chevron-right"></i>'
        ],
        responsive: {
            1200: {
                items: 1,
            },
            992: {
                items: 1,
            },
            0: {
                items: 1,
            }

        }
    });
    //========= testimonial 
    tns({
        container: '.testimonial-slider',
        items: 3,
        slideBy: 'page',
        autoplay: false,
        mouseDrag: true,
        gutter: 0,
        nav: true,
        controls: false,
        controlsText: ['<i class="lni lni-arrow-left"></i>', '<i class="lni lni-arrow-right"></i>'],
        responsive: {
            0: {
                items: 1,
            },
            540: {
                items: 1,
            },
            768: {
                items: 2,
            },
            992: {
                items: 2,
            },
            1170: {
                items: 3,
            }
        }
    });

    //====== counter up 
    var cu = new counterUp({
        start: 0,
        duration: 2000,
        intvalues: true,
        interval: 100,
        append: " ",
    });
    cu.start();
    //========= glightbox
    GLightbox({
        'href': '#',
        'type': 'video',
        'source': 'youtube', //vimeo, youtube or local
        'width': 900,
        'autoplayVideos': true,
    });
    //============== isotope masonry js with imagesloaded
    imagesLoaded('#container', function() {
        var elem = document.querySelector('.grid');
        var iso = new Isotope(elem, {
            // options
            itemSelector: '.grid-item',
            masonry: {
                // use outer width of grid-sizer for columnWidth
                columnWidth: '.grid-item'
            }
        });

        let filterButtons = document.querySelectorAll('.portfolio-btn-wrapper button');
        filterButtons.forEach(e =>
            e.addEventListener('click', () => {

                let filterValue = event.target.getAttribute('data-filter');
                iso.arrange({
                    filter: filterValue
                });
            })
        );
    });
    </script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>