<!DOCTYPE html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://sing-box-node.github.io/news/article-41247.htm" />
    <meta charset="utf-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <title>异步复位同步释放在实际项目中的应用</title>
        <meta name="description" content="1 引言 最近看了“How do I reset my FPGA?”和一些时序分析的内容，发现之前ov5640图像采集项目中的几个问题： 问题1：用了全局时钟复位，全局复位一般具有高扇出（需要驱动的后" />
        <link rel="icon" href="/assets/website/img/sing_box_node/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Singbox Node机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://sing-box-node.github.io/news/article-41247.htm" />
    <meta property="og:site_name" content="Singbox Node机场订阅官网" />
    <meta property="og:title" content="异步复位同步释放在实际项目中的应用" />
    <meta property="og:image" content="https://sing-box-node.github.io/uploads/20240825-1/0aeba513b7a84df95c93d617a55e6944.webp" />
        <meta property="og:release_date" content="2025-01-15T09:51:27" />
    <meta property="og:updated_time" content="2025-01-15T09:51:27" />
        <meta property="og:description" content="1 引言 最近看了“How do I reset my FPGA?”和一些时序分析的内容，发现之前ov5640图像采集项目中的几个问题： 问题1：用了全局时钟复位，全局复位一般具有高扇出（需要驱动的后" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="异步复位同步释放在实际项目中的应用">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Web Font -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&display=swap" rel="stylesheet">
    <!-- ========================= CSS here ========================= -->
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/bootstrap.min.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/LineIcons.2.0.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/animate.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/tiny-slider.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/glightbox.min.css" />
    <link rel="stylesheet" href="/assets/website/css/sing_box_node/main.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-51ZXJ2Q5DQ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-51ZXJ2Q5DQ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
    
</head>

<body data-page="detail">
        <div class="preloader">
        <div class="preloader-inner">
            <div class="preloader-icon">
                <span></span>
                <span></span>
            </div>
        </div>
    </div>
    <!-- /End Preloader -->
    <!-- Start Header Area -->
    <header class="header navbar-area">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-12">
                    <div class="nav-inner">
                        <!-- Start Navbar -->
                        <nav class="navbar navbar-expand-lg">
                                                        <a class="navbar-brand" href="/">
                                <span>Singbox Node</span>
                            </a>
                                                        <button class="navbar-toggler mobile-menu-btn" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                            </button>
                            <div class="collapse navbar-collapse sub-menu-bar" id="navbarSupportedContent">
                                <ul id="nav" class="navbar-nav ms-auto">
                                                                        <li class="nav-item">
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="#">关于</a>
                                    </li>
                                    <li class="nav-item">
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </div> <!-- navbar collapse -->
                        </nav>
                        <!-- End Navbar -->
                    </div>
                </div>
            </div> <!-- row -->
        </div> <!-- container -->
    </header>
    <!-- End Header Area -->
    <!-- Start Breadcrumbs -->
    <div class="breadcrumbs overlay">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-8 offset-lg-2 col-md-12 col-12">
                    <div class="breadcrumbs-content">
                        <h1 class="page-title">异步复位同步释放在实际项目中的应用</h1>
                    </div>
                    <ul class="breadcrumb-nav">
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <!-- End Breadcrumbs -->
    <!-- Start Departments  Area -->
    <section class="departments section">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				</h1> <h2>1 引言</h2> <p>最近看了“How do I reset my FPGA?”和一些时序分析的内容，发现之前ov5640图像采集项目中的几个问题：</p> <p>问题1：用了全局时钟复位，全局复位一般具有高扇出（需要驱动的后级逻辑信号多），因为它需要扩展到设计中的每一个触发器。这样会消耗大量的布线资源，对器件的利用率和时序性能造成不利影响。</p> <p>问题2：设计全采用了异步复位，对毛刺敏感且复位结束会处于亚稳态。</p> <p>问题3：在locked1，locked2为低时，时钟是不稳定的，此时送入后续模块的是不稳定的时钟，触发器可能出现功能错误。</p> <p>那么我们是否需要重构全部的代码呢？其实也没有必要。重构代码很麻烦，需要对所有18个模块进行代码修改，然后重新仿真十八次。</p> <p>这里我们选择在顶层模块进行复位模块局部化的划分，若实现送入每一个模块的都是异步复位同步释放后的复位信号，保证信号已经同步，本质上也是一样的。而且打两拍之后的复位信号送到时，一方面信号对毛刺不敏感，不会受到脉冲干扰，另外一方面，也相当于复位信号延后了一个或两个clock,最后一个clock时两个locked信号均已稳定，保证系统正常工作。</p> <h2>2 代码</h2> <h3>2.1 时钟模块</h3> <p>首先，我们需要确定项目中各模块工作的时钟域。此处有一点注意事项，我们pll2中的输入时钟为pll1生成的100Mhz时钟而非外部时钟，因此调用ip核时需要选用"no buffer"否则会报错。我们调用的两个pll代码如下：</p> <pre><code class="language-verilog">//复位模块复位信号 assign  rst_n = locked1 &amp;&amp; locked2 &amp;&amp; sys_rst_n; //时钟模块1例化 clk_gen clk_gen_inst (     .clk_125m            (clk_125m           ),     // output sdram clk     .clk_shift_125m      (clk_shift_125m     ),     // output sdram output clk     .clk_50m             (clk_50m            ),     // output ov5640 clk     .clk_100m            (clk_100m           ),     // output pll2 clk     .clk_24m             (clk_24m            ),     // output ov5640 output clk     .reset               (~pll_rst_n1        ),     // input      .locked              (locked1            ),     // output     .sys_clk             (sys_clk            )      // input sys_clk ); //时钟模块2例化 clk_gen_hdmi clk_gen_hdmi_inst (     .clk_74m             (clk_74m            ),     // output vga clk     .clk_371m            (clk_371m           ),     // output hdmi tmds clk     .reset               (~pll_rst_n2        ),     // input      .locked              (locked2            ),     // output      .clk_100m            (clk_100m           )      // input clk_100m pll1 output clk_100Mhz );</code></pre> <p>此处我们会发现一个问题，我们后续模块的复位信号是在时钟稳定的情况下基础上生成的，而实际上pll本身也有复位信号，为了保障整个工程的稳定性，我们需要对pll的复位信号也进行异步复位同步释放</p> <p>图1 结果时序图</p> <h3>2.2 复位模块</h3> <p>下面是我们设置的复位模块代码，在时钟稳定后， 将工作时钟，外部输入复位信号送入模块后，在各模块时钟下同步后的复位信号输出至各模块</p> <p>那么这里有个问题，如果在时钟没稳定前，如果有复位信号输入本模块会不会出现亚稳态的问题呢，实际上是不会的，我们可以看复位模块的复位信号，在时钟信号没稳定下，locked1，locked2常为0，不存在信号变化也就不存在亚稳态的问题了。</p> <p>复位模块复位信号代码如下：</p> <pre><code class="language-verilog">//复位模块复位信号 assign  rst_n = locked1 &amp;&amp; locked2 &amp;&amp; sys_rst_n;</code></pre> <p>复位模块代码如下：</p> <pre><code class="language-verilog">//************************************************************************** // *** 名称 : sys_reset.v // *** 作者 : 吃豆熊 // *** 日期 : 2021-4-1 // *** 描述 : 异步复位同步释放模块 //**************************************************************************  module sys_reset //========================&lt; 端口 &gt;========================================== (     input   wire                sys_clk,                  //系统时钟     input   wire                pll_clk1,      input   wire                pll_clk2,      input   wire                vga_clk,       input   wire                sdram_clk,     input   wire                hdmi_clk,       input   wire                sys_rst_n,                //外界输入复位     input   wire                rst_n,                    //两级时钟pll稳定后复位      output   wire               pll_rst_n1,               //第一级pll复位    异步复位同步释放后复位     output   wire               pll_rst_n2,               //第二级pll复位     output   wire               camera_rst_n,             //摄像头模块复位     output   wire               vga_rst_n,                //vga模块复位     output   wire               sdram_rst_n,              //sdram模块复位     output   wire               hdmi_rst_n                //hdmi模块复位 );  //========================&lt; 信号 &gt;========================================== //第一级pll复位 reg                         pll_rst_n_reg1; reg                         pll_rst_n_reg2; //第二级pll复位 reg                         pll_rst_n_reg3; reg                         pll_rst_n_reg4; //摄像头复位 reg                         camera_rst_n_reg1; reg                         camera_rst_n_reg2; //sdram复位 reg                         sdram_rst_n_reg1; reg                         sdram_rst_n_reg2; //vga复位 reg                         vga_rst_n_reg1; reg                         vga_rst_n_reg2; //hdmi复位 reg                         hdmi_rst_n_reg1; reg                         hdmi_rst_n_reg2;  //========================================================================== //==    信号生成 //========================================================================== //第一级pll复位信号 always@(posedge pll_clk1 or negedge sys_rst_n )begin     if(sys_rst_n == 1'b0)begin         pll_rst_n_reg1 &lt;= 1'b0;         pll_rst_n_reg2 &lt;= 1'b0;    end   else begin         pll_rst_n_reg1 &lt;= 1'b1;         pll_rst_n_reg2 &lt;= pll_rst_n_reg1;     end end  assign pll_rst_n1 = pll_rst_n_reg2; //第二级pll复位信号  always@(posedge pll_clk2 or negedge sys_rst_n )begin     if(sys_rst_n == 1'b0)begin         pll_rst_n_reg3 &lt;= 1'b0;         pll_rst_n_reg4 &lt;= 1'b0;    end   else begin         pll_rst_n_reg3 &lt;= 1'b1;         pll_rst_n_reg4 &lt;= pll_rst_n_reg3;     end end  assign pll_rst_n2 = pll_rst_n_reg4;  //摄像头复位信号 always@(posedge pll_clk2 or negedge rst_n )begin     if(rst_n == 1'b0)begin         camera_rst_n_reg1 &lt;= 1'b0;         camera_rst_n_reg2 &lt;= 1'b0;    end   else begin         camera_rst_n_reg1 &lt;= 1'b1;         camera_rst_n_reg2 &lt;= camera_rst_n_reg1;     end end  assign camera_rst_n = camera_rst_n_reg2;   //sdram复位信号 always@(posedge sdram_clk or negedge rst_n )begin     if(rst_n == 1'b0)begin         sdram_rst_n_reg1 &lt;= 1'b0;         sdram_rst_n_reg2 &lt;= 1'b0;    end   else begin         sdram_rst_n_reg1 &lt;= 1'b1;         sdram_rst_n_reg2 &lt;= sdram_rst_n_reg1;     end end  assign sdram_rst_n = sdram_rst_n_reg2;   //vga复位信号 always@(posedge vga_clk or negedge rst_n )begin     if(rst_n == 1'b0)begin         vga_rst_n_reg1 &lt;= 1'b0;         vga_rst_n_reg2 &lt;= 1'b0;    end   else begin         vga_rst_n_reg1 &lt;= 1'b1;         vga_rst_n_reg2 &lt;= vga_rst_n_reg1;     end end  assign vga_rst_n = vga_rst_n_reg2;   //hdmi复位信号 always@(posedge hdmi_clk or negedge rst_n )begin     if(rst_n == 1'b0)begin         hdmi_rst_n_reg1 &lt;= 1'b0;         hdmi_rst_n_reg2 &lt;= 1'b0;    end   else begin         hdmi_rst_n_reg1 &lt;= 1'b1;         hdmi_rst_n_reg2 &lt;= hdmi_rst_n_reg1;     end end  assign hdmi_rst_n = hdmi_rst_n_reg2;  endmodule</code></pre> <p>最后是我们的顶层模块例化代码：</p> <pre><code class="language-verilog">//局部复位划分模块 sys_reset sys_reset_inst (     .sys_clk             (sys_clk            ),     .pll_clk1            (sys_clk            ),     .pll_clk2            (clk_100m           ),     .vga_clk             (clk_74m            ),     .sdram_clk           (clk_125m           ),     .hdmi_clk            (clk_74m            ),     //输入复位            .sys_rst_n           (sys_rst_n          ),     .rst_n               (rst_n              ),     //输出异步复位同步释放后复位信号         .pll_rst_n1          (pll_rst_n1         ),     .pll_rst_n2          (pll_rst_n2         ),     .camera_rst_n        (camera_rst_n       ),     .vga_rst_n           (vga_rst_n          ),     .sdram_rst_n         (sdram_rst_n        ),     .hdmi_rst_n          (hdmi_rst_n         ) );</code></pre> <p>随后我们就可以将输出的复位信号输入各个模块使用，且理论上由于均为wire型，因此与在每个模块内进行同步毫无区别。同时也避免了需要在顶层模块进行时钟复位信号的同步，保证了顶层模块的简洁。</p> <p>、、、</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-40750.htm">宠物领养网免费同城多少钱一只 宠物领养网免费同城多少钱一只猫</a></p>
                                        <p>下一个：<a href="/news/article-41248.htm">我想开一家宠物店大概需要多少钱?（开一个宠物店大概要多少钱）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-4-node-share.htm" title="「1月4日」最高速度20.1M/S，2025年Singbox Node每天更新免费机场订阅节点链接">「1月4日」最高速度20.1M/S，2025年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-31-free-node-subscribe.htm" title="「1月31日」最高速度22.3M/S，2025年Singbox Node每天更新免费机场订阅节点链接">「1月31日」最高速度22.3M/S，2025年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-10-node-share-links.htm" title="「11月10日」最高速度18.8M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「11月10日」最高速度18.8M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-17-free-node-subscribe-links.htm" title="「11月17日」最高速度22.8M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「11月17日」最高速度22.8M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-27-node-share-links.htm" title="「12月27日」最高速度18.2M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「12月27日」最高速度18.2M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-25-free-subscribe-node.htm" title="「1月25日」最高速度22.9M/S，2025年Singbox Node每天更新免费机场订阅节点链接">「1月25日」最高速度22.9M/S，2025年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-29179.htm" title="动物疫苗的作用意义是什么意思啊（动物疫苗的重要性）">动物疫苗的作用意义是什么意思啊（动物疫苗的重要性）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-26-free-node-subscribe.htm" title="「11月26日」最高速度21.2M/S，2024年Singbox Node每天更新免费机场订阅节点链接">「11月26日」最高速度21.2M/S，2024年Singbox Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-24451.htm" title="宠物医院好评模板50字怎么写 宠物医院好评模板50字怎么写的">宠物医院好评模板50字怎么写 宠物医院好评模板50字怎么写的</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-23-node-share-links.htm" title="「1月23日」最高速度18.8M/S，2025年Singbox Node每天更新免费机场订阅节点链接">「1月23日」最高速度18.8M/S，2025年Singbox Node每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- /End Departments  Area -->
        <!-- Start Footer Area -->
    <footer class="footer overlay">
        <!-- Start Footer Bottom -->
        <div class="footer-bottom">
            <div class="container">
                <div class="inner">
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-12">
                            <div class="content">
                                <p class="copyright-text">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                                Singbox Node机场订阅官网 版权所有
                                <br />
                                Powered by WordPress
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Footer Middle -->
    </footer>
    <!--/ End Footer Area -->
    <!-- ========================= scroll-top ========================= -->
    <a href="#" class="scroll-top">
        <i class="lni lni-chevron-up"></i>
    </a>
    <!-- ========================= JS here ========================= -->
    <script src="/assets/website/js/frontend/sing_box_node/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/wow.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/tiny-slider.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/count-up.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/imagesloaded.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/isotope.min.js"></script>
    <script src="/assets/website/js/frontend/sing_box_node/main.js"></script>
    <script type="text/javascript">
    //======== Hero Slider
    var slider = new tns({
        container: '.hero-slider',
        slideBy: 'page',
        autoplay: true,
        autoplayButtonOutput: false,
        mouseDrag: true,
        gutter: 0,
        items: 1,
        nav: false,
        controls: true,
        controlsText: [
            '<i class="lni lni-chevron-left"></i>',
            '<i class="lni lni-chevron-right"></i>'
        ],
        responsive: {
            1200: {
                items: 1,
            },
            992: {
                items: 1,
            },
            0: {
                items: 1,
            }

        }
    });
    //========= testimonial 
    tns({
        container: '.testimonial-slider',
        items: 3,
        slideBy: 'page',
        autoplay: false,
        mouseDrag: true,
        gutter: 0,
        nav: true,
        controls: false,
        controlsText: ['<i class="lni lni-arrow-left"></i>', '<i class="lni lni-arrow-right"></i>'],
        responsive: {
            0: {
                items: 1,
            },
            540: {
                items: 1,
            },
            768: {
                items: 2,
            },
            992: {
                items: 2,
            },
            1170: {
                items: 3,
            }
        }
    });

    //====== counter up 
    var cu = new counterUp({
        start: 0,
        duration: 2000,
        intvalues: true,
        interval: 100,
        append: " ",
    });
    cu.start();
    //========= glightbox
    GLightbox({
        'href': '#',
        'type': 'video',
        'source': 'youtube', //vimeo, youtube or local
        'width': 900,
        'autoplayVideos': true,
    });
    //============== isotope masonry js with imagesloaded
    imagesLoaded('#container', function() {
        var elem = document.querySelector('.grid');
        var iso = new Isotope(elem, {
            // options
            itemSelector: '.grid-item',
            masonry: {
                // use outer width of grid-sizer for columnWidth
                columnWidth: '.grid-item'
            }
        });

        let filterButtons = document.querySelectorAll('.portfolio-btn-wrapper button');
        filterButtons.forEach(e =>
            e.addEventListener('click', () => {

                let filterValue = event.target.getAttribute('data-filter');
                iso.arrange({
                    filter: filterValue
                });
            })
        );
    });
    </script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>